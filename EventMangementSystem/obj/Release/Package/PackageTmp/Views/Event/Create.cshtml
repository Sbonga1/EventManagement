@model EventMangementSystem.Models.Event

@{
    ViewBag.Title = "Create Event";
    var inventoriesJson = Newtonsoft.Json.JsonConvert.SerializeObject(ViewBag.Inventories);
    var eventInventories = Model.EventInventories.ToList();
}

<h2>Create Event</h2>

@using (Html.BeginForm("Create", "Event", FormMethod.Post, new { enctype = "multipart/form-data" }))
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>Event</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })

        <div class="form-group">
            @Html.LabelFor(model => model.Name, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Name, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Name, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Date, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Date, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Date, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Start, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Start, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Start, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.End, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.End, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.End, "", new { @class = "text-danger" })
            </div>
        </div>
        <div class="form-group">
            @Html.LabelFor(model => model.Location, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.Location, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Location, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.Description, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.TextAreaFor(model => model.Description, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.Description, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.TicketPrice, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.TicketPrice, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.TicketPrice, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.VenueId, "Venue", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.DropDownList("VenueId", null, htmlAttributes: new { @class = "form-control" })
                @Html.ValidationMessageFor(model => model.VenueId, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.Label("Event Picture", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                <input type="file" name="EventPicture" class="form-control" />
            </div>
        </div>

        <div class="form-group">
            <h4>Add Inventories</h4>
            <div id="inventory-items">
                @for (int i = 0; i < eventInventories.Count; i++)
                {
                    @Html.HiddenFor(model => eventInventories[i].EventInventoryId)
                    @Html.HiddenFor(model => eventInventories[i].EventId)

                    <div class="form-group">
                        @Html.LabelFor(model => eventInventories[i].InventoryId, "Inventory", htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-6">
                            @Html.DropDownListFor(model => eventInventories[i].InventoryId, new SelectList(ViewBag.Inventories, "InventoryId", "ItemName"), new { @class = "form-control" })
                            @Html.ValidationMessageFor(model => eventInventories[i].InventoryId, "", new { @class = "text-danger" })
                        </div>
                        <div class="col-md-2">
                            @Html.EditorFor(model => eventInventories[i].QuantityRequired, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => eventInventories[i].QuantityRequired, "", new { @class = "text-danger" })
                        </div>
                    </div>
                }
            </div>
            <button type="button" class="btn btn-default" id="add-inventory">Add Inventory</button>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Create" class="btn btn-primary" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to List", "Index")
</div>

@section Scripts {
    <script src="https://ajax.googleapis.com/ajax/libs/jquery/3.7.1/jquery.min.js"></script>
    <script>
        $(document).ready(function () {
            var inventories = @Html.Raw(inventoriesJson);
            var inventoryIndex = @eventInventories.Count;

            function buildInventoryDropdown(index) {
                var select = '<select class="form-control" id="Inventories_' + index + '__InventoryId" name="Inventories[' + index + '].InventoryId">';
                select += '<option value="">Select Inventory</option>';
                for (var i = 0; i < inventories.length; i++) {
                    select += '<option value="' + inventories[i].InventoryId + '">' + inventories[i].ItemName + '</option>';
                }
                select += '</select>';
                return select;
            }

            $('#add-inventory').click(function () {
                var newInventory = '<div class="form-group">' +
                    '<label class="control-label col-md-2" for="Inventories_' + inventoryIndex + '__InventoryId">Inventory</label>' +
                    '<div class="col-md-6">' +
                    buildInventoryDropdown(inventoryIndex) +
                    '</div>' +
                    '<div class="col-md-2">' +
                    '<input class="form-control text-box single-line" id="Inventories_' + inventoryIndex + '__QuantityRequired" name="Inventories[' + inventoryIndex + '].QuantityRequired" type="number" value="0" min="0" />' +
                    '</div>' +
                    '</div>';

                $('#inventory-items').append(newInventory);
                inventoryIndex++;
            });
        });
    </script>
}


